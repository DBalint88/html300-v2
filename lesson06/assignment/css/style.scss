// Import partials here
@import 'base.normalize';
@import 'settings.variables';
@import 'settings.responsive';
@import 'components.content';

body {
  // Combined with #content-wrapper, limits the width of the page and centers it
  display: grid;
  justify-content: center;
}

#content-wrapper {
  // Width is 100% of viewport in CSS, but restricted to Bootstrap breakpoints.
  width: 100vw;
  // Min-height 100vh combined with the grid-template-rows keeps the footer at the bottom of the page
  min-height: 100vh;
  // This is a grid where CSS takes care of the rows, and Bootstrap takes care of the columns.
  display: grid;
  // Row-gap and padding at horizontal dividers between sections
  row-gap: .25rem;
  padding: 0;
  grid-template-rows: auto auto 1fr auto;
  grid-template-areas: "header"
                       "nav"
                       "content"
                       "footer"
}

// Definitions of grid-areas within the template above.
header {grid-area: header;}
nav {grid-area: nav;}
#sidebar-main {grid-area: content;}
footer {grid-area: footer;}

// Trying to get my PDF's to load responsively with the reasonable aspect ratio on a variety of screens

@media only screen and (max-width: 991px) {main {padding-bottom: 150%;}}
@media only screen and (min-width: 992px) {main {padding-bottom: 103%;}}
@media only screen and (min-width: 1200px) {main {padding-bottom: 100%;}}
@media only screen and (min-width: 1400px) {main {padding-bottom: 90%;}}

main {
  position: relative;
  float: left;
  height: 0;
}

#pdf-viewer {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
}

.song-button {
  cursor: pointer;
  margin-bottom: 1rem;
}
